name: Run tests and linters

on: [push, pull_request]

jobs:
  build:
    strategy:
      fail-fast: true
      matrix:
        #os: [ubuntu, macos, windows]
        os: [ubuntu]
        #db: [mysql, postgres, sqlite3]
        db: [postgres]
        ruby:
          #- head
          - 2.7
            #- 2.6
            #- 2.5
            #- 2.4
            #- 2.3
            #- 2.2
            #- 2.1
        RAILS_VERSION:
          # - head
          - 6.0.0
            #- 5.2.0
            #- 5.1.0
            #- 5.0.0
            #- 4.2.0
            #- 4.1.0
            #- 3.2.0
            #- 3.1.0

    runs-on: ${{ matrix.os }}-latest
    continue-on-error: ${{ endsWith(matrix.ruby, 'head') || matrix.ruby == 'debug' || endsWith(matrix.RAILS_VERSION, 'head') }}

    services:
      postgres:
        if: ${{ matrix.db == 'postgres' }}
        image: postgres:11
        ports: ['5432:5432']
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: seed_fu_test
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v2
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby }}
    - name: Build and test
      env:
        RAILS_ENV: test
        RAILS_VERSION: ${{ matrix.RAILS_VERSION }}
        POSTGRES_HOST: localhost
        POSTGRES_USER: postgres
        POSTGRES_PASS: postgres
        POSTGRES_DB: seed_fu_test
        POSTGRES_PORT: ${{ job.services.postgres.ports[5432] }}
      run: |
        sudo apt-get -yqq install libpq-dev libmysqlclient-dev libsqlite3-dev
        gem install bundler -q
        bundle install --gemfile gemfiles/ci.gemfile --jobs 4 --retry 3 --quiet
        DB=postgresql bundle exec --gemfile gemfiles/ci.gemfile rspec
